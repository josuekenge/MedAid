{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/josue/OneDrive/Desktop/MedAid/components/ui/modal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ReactNode } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: ReactNode;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n}\r\n\r\nexport function Modal({ isOpen, onClose, title, children, size = 'md' }: ModalProps) {\r\n  if (!isOpen) return null;\r\n\r\n  const sizeClasses = {\r\n    sm: 'max-w-md',\r\n    md: 'max-w-lg',\r\n    lg: 'max-w-2xl',\r\n    xl: 'max-w-4xl',\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n      {/* Backdrop */}\r\n      <div \r\n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\r\n        onClick={onClose}\r\n      />\r\n      \r\n      {/* Modal */}\r\n      <div className={`relative bg-white rounded-lg shadow-xl w-full mx-4 ${sizeClasses[size]} max-h-[90vh] overflow-hidden`}>\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={onClose}\r\n            className=\"h-8 w-8 p-0\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n        \r\n        {/* Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ConfirmDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  message: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  variant?: 'default' | 'destructive';\r\n}\r\n\r\nexport function ConfirmDialog({ \r\n  isOpen, \r\n  onClose, \r\n  onConfirm, \r\n  title, \r\n  message, \r\n  confirmText = 'Confirm',\r\n  cancelText = 'Cancel',\r\n  variant = 'default'\r\n}: ConfirmDialogProps) {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n      {/* Backdrop */}\r\n      <div \r\n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\r\n        onClick={onClose}\r\n      />\r\n      \r\n      {/* Dialog */}\r\n      <div className=\"relative bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{title}</h3>\r\n          <p className=\"text-gray-600 mb-6\">{message}</p>\r\n          \r\n          <div className=\"flex justify-end space-x-3\">\r\n            <Button variant=\"outline\" onClick={onClose}>\r\n              {cancelText}\r\n            </Button>\r\n            <Button \r\n              variant={variant === 'destructive' ? 'destructive' : 'default'}\r\n              onClick={() => {\r\n                onConfirm();\r\n                onClose();\r\n              }}\r\n            >\r\n              {confirmText}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAJA;;;;AAcO,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,IAAI,EAAc;IACjF,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,WAAU;gBACV,SAAS;;;;;;0BAIX,8OAAC;gBAAI,WAAW,CAAC,mDAAmD,EAAE,WAAW,CAAC,KAAK,CAAC,6BAA6B,CAAC;;kCAEpH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAuC;;;;;;0CACrD,8OAAC,qIAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;0CAEV,cAAA,8OAAC,iMAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAKjB,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAKX;AAaO,SAAS,cAAc,EAC5B,MAAM,EACN,OAAO,EACP,SAAS,EACT,KAAK,EACL,OAAO,EACP,cAAc,SAAS,EACvB,aAAa,QAAQ,EACrB,UAAU,SAAS,EACA;IACnB,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,WAAU;gBACV,SAAS;;;;;;0BAIX,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA4C;;;;;;sCAC1D,8OAAC;4BAAE,WAAU;sCAAsB;;;;;;sCAEnC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,qIAAM;oCAAC,SAAQ;oCAAU,SAAS;8CAChC;;;;;;8CAEH,8OAAC,qIAAM;oCACL,SAAS,YAAY,gBAAgB,gBAAgB;oCACrD,SAAS;wCACP;wCACA;oCACF;8CAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/josue/OneDrive/Desktop/MedAid/components/ui/label.tsx"],"sourcesContent":["import { LabelHTMLAttributes, forwardRef } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        'text-sm font-medium leading-none text-neutral-700 peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-neutral-300',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nLabel.displayName = 'Label';\r\n\r\nexport { Label };\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,IAAA,mNAAU,EACtB,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,qIACA;QAED,GAAG,KAAK;;;;;;AAIf,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/josue/OneDrive/Desktop/MedAid/components/forms/visit-form.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Visit } from '@/lib/schemas';\r\n\r\ninterface VisitFormProps {\r\n  visit?: Visit;\r\n  patients: any[];\r\n  nurses: any[];\r\n  services: any[];\r\n  onSubmit: (visit: Omit<Visit, 'id' | 'createdAt' | 'updatedAt'>) => void;\r\n  onCancel: () => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport function VisitForm({ visit, patients, nurses, services, onSubmit, onCancel, isLoading = false }: VisitFormProps) {\r\n  const [formData, setFormData] = useState({\r\n    patientId: visit?.patientId || '',\r\n    nurseId: visit?.nurseId || '',\r\n    serviceId: visit?.serviceId || '',\r\n    date: visit?.date ? new Date(visit.date).toISOString().split('T')[0] : '',\r\n    windowStart: visit?.windowStart ? new Date(visit.windowStart).toISOString().slice(0, 16) : '',\r\n    windowEnd: visit?.windowEnd ? new Date(visit.windowEnd).toISOString().slice(0, 16) : '',\r\n    reasonForVisit: visit?.reasonForVisit || '',\r\n    status: visit?.status || 'scheduled',\r\n    priority: visit?.priority || 'medium',\r\n    notes: visit?.notes || '',\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSubmit({\r\n      ...formData,\r\n      date: new Date(formData.date),\r\n      windowStart: new Date(formData.windowStart),\r\n      windowEnd: new Date(formData.windowEnd),\r\n      checkInTime: visit?.checkInTime || null,\r\n      checkOutTime: visit?.checkOutTime || null,\r\n      location: visit?.location || null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <Label htmlFor=\"patientId\">Patient *</Label>\r\n          <select\r\n            id=\"patientId\"\r\n            value={formData.patientId}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, patientId: e.target.value }))}\r\n            required\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">Select a patient</option>\r\n            {patients.map(patient => (\r\n              <option key={patient.id} value={patient.id}>\r\n                {patient.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <Label htmlFor=\"nurseId\">Nurse *</Label>\r\n          <select\r\n            id=\"nurseId\"\r\n            value={formData.nurseId}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, nurseId: e.target.value }))}\r\n            required\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">Select a nurse</option>\r\n            {nurses.map(nurse => (\r\n              <option key={nurse.id} value={nurse.id}>\r\n                {nurse.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <Label htmlFor=\"serviceId\">Service *</Label>\r\n          <select\r\n            id=\"serviceId\"\r\n            value={formData.serviceId}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, serviceId: e.target.value }))}\r\n            required\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">Select a service</option>\r\n            {services.map(service => (\r\n              <option key={service.id} value={service.id}>\r\n                {service.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <Label htmlFor=\"date\">Date *</Label>\r\n          <Input\r\n            id=\"date\"\r\n            type=\"date\"\r\n            value={formData.date}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, date: e.target.value }))}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <Label htmlFor=\"windowStart\">Start Time *</Label>\r\n          <Input\r\n            id=\"windowStart\"\r\n            type=\"datetime-local\"\r\n            value={formData.windowStart}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, windowStart: e.target.value }))}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <Label htmlFor=\"windowEnd\">End Time *</Label>\r\n          <Input\r\n            id=\"windowEnd\"\r\n            type=\"datetime-local\"\r\n            value={formData.windowEnd}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, windowEnd: e.target.value }))}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <Label htmlFor=\"status\">Status</Label>\r\n          <select\r\n            id=\"status\"\r\n            value={formData.status}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value as any }))}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"scheduled\">Scheduled</option>\r\n            <option value=\"in_progress\">In Progress</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"delayed\">Delayed</option>\r\n            <option value=\"cancelled\">Cancelled</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <Label htmlFor=\"priority\">Priority</Label>\r\n          <select\r\n            id=\"priority\"\r\n            value={formData.priority}\r\n            onChange={(e) => setFormData(prev => ({ ...prev, priority: e.target.value as any }))}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n            <option value=\"urgent\">Urgent</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"reasonForVisit\">Reason for Visit *</Label>\r\n        <Input\r\n          id=\"reasonForVisit\"\r\n          value={formData.reasonForVisit}\r\n          onChange={(e) => setFormData(prev => ({ ...prev, reasonForVisit: e.target.value }))}\r\n          required\r\n          placeholder=\"Enter reason for visit\"\r\n        />\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"notes\">Notes</Label>\r\n        <textarea\r\n          id=\"notes\"\r\n          value={formData.notes}\r\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          rows={3}\r\n          placeholder=\"Additional notes about the visit\"\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"flex justify-end space-x-3 pt-4\">\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Saving...' : (visit ? 'Update Visit' : 'Add Visit')}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/josue/OneDrive/Desktop/MedAid/lib/mock-data.ts"],"sourcesContent":["// Mock data for frontend development\n// Replace with real API calls when backend is added\n\n// Error handling wrapper for data access\nconst safeDataAccess = <T>(data: T[], fallback: T[] = []): T[] => {\n  try {\n    return Array.isArray(data) ? data : fallback;\n  } catch (error) {\n    console.error('Error accessing mock data:', error);\n    return fallback;\n  }\n};\n\nexport const mockPatients = [\n  { \n    id: '1', \n    name: 'John Doe', \n    email: 'john.doe@email.com',\n    phone: '(555) 123-4567',\n    status: 'active',\n    dateOfBirth: '1985-03-15',\n    address: '123 Main St, Toronto, ON',\n    emergencyContact: 'Jane Doe - (555) 987-6543'\n  },\n  { \n    id: '2', \n    name: 'Jane Smith', \n    email: 'jane.smith@email.com',\n    phone: '(555) 234-5678',\n    status: 'active',\n    dateOfBirth: '1990-07-22',\n    address: '456 Oak Ave, Toronto, ON',\n    emergencyContact: 'Bob Smith - (555) 876-5432'\n  },\n  { \n    id: '3', \n    name: 'Bob Johnson', \n    email: 'bob.johnson@email.com',\n    phone: '(555) 345-6789',\n    status: 'inactive',\n    dateOfBirth: '1978-11-08',\n    address: '789 Pine Rd, Toronto, ON',\n    emergencyContact: 'Mary Johnson - (555) 765-4321'\n  }\n];\n\nexport const mockNurses = [\n  { \n    id: '1', \n    name: 'Sarah Wilson', \n    email: 'sarah.wilson@medaid.ca',\n    phone: '(555) 111-2222',\n    status: 'active',\n    specialty: 'General Care',\n    licenseNumber: 'RN123456',\n    experience: '5 years'\n  },\n  { \n    id: '2', \n    name: 'Mike Brown', \n    email: 'mike.brown@medaid.ca',\n    phone: '(555) 333-4444',\n    status: 'active',\n    specialty: 'Critical Care',\n    licenseNumber: 'RN789012',\n    experience: '8 years'\n  },\n  { \n    id: '3', \n    name: 'Lisa Davis', \n    email: 'lisa.davis@medaid.ca',\n    phone: '(555) 555-6666',\n    status: 'inactive',\n    specialty: 'Pediatrics',\n    licenseNumber: 'RN345678',\n    experience: '3 years'\n  }\n];\n\nexport const mockVisits = [\n  {\n    id: '1',\n    patientId: '1',\n    nurseId: '1',\n    patientName: 'John Doe',\n    nurseName: 'Sarah Wilson',\n    date: '2024-01-15T09:00:00.000Z',\n    time: '09:00',\n    status: 'scheduled',\n    type: 'routine',\n    notes: 'Regular checkup',\n    address: '123 Main St, Toronto, ON'\n  },\n  {\n    id: '2',\n    patientId: '2',\n    nurseId: '2',\n    patientName: 'Jane Smith',\n    nurseName: 'Mike Brown',\n    date: '2024-01-15T10:30:00.000Z',\n    time: '10:30',\n    status: 'completed',\n    type: 'follow-up',\n    notes: 'Post-surgery check',\n    address: '456 Oak Ave, Toronto, ON'\n  },\n  {\n    id: '3',\n    patientId: '1',\n    nurseId: '2',\n    patientName: 'John Doe',\n    nurseName: 'Mike Brown',\n    date: '2024-01-16T14:00:00.000Z', // Tomorrow\n    time: '14:00',\n    status: 'scheduled',\n    type: 'urgent',\n    notes: 'Follow-up appointment',\n    address: '123 Main St, Toronto, ON'\n  }\n];\n\nexport const mockIncidents = [\n  {\n    id: '1',\n    title: 'Medication Error',\n    description: 'Incorrect dosage administered to patient',\n    status: 'open',\n    priority: 'high',\n    reportedBy: 'Sarah Wilson',\n    reportedAt: '2024-01-15T08:30:00.000Z',\n    assignedTo: 'Mike Brown',\n    createdAt: '2024-01-15T08:30:00.000Z'\n  },\n  {\n    id: '2',\n    title: 'Equipment Malfunction',\n    description: 'Blood pressure monitor not working properly',\n    status: 'investigating',\n    priority: 'medium',\n    reportedBy: 'Mike Brown',\n    reportedAt: '2024-01-15T09:15:00.000Z',\n    assignedTo: 'Lisa Davis',\n    createdAt: '2024-01-15T09:15:00.000Z'\n  },\n  {\n    id: '3',\n    title: 'Patient Fall',\n    description: 'Patient fell in bathroom during visit',\n    status: 'resolved',\n    priority: 'high',\n    reportedBy: 'Sarah Wilson',\n    reportedAt: '2024-01-14T14:20:00.000Z',\n    assignedTo: 'Mike Brown',\n    createdAt: '2024-01-14T14:20:00.000Z'\n  }\n];\n\nexport const mockBillingItems = [\n  {\n    id: '1',\n    patientId: '1',\n    patientName: 'John Doe',\n    service: 'Home Visit - Routine',\n    amount: 150.00,\n    status: 'pending',\n    date: '2024-01-15T09:00:00.000Z',\n    dueDate: '2024-02-14T23:59:59.000Z'\n  },\n  {\n    id: '2',\n    patientId: '2',\n    patientName: 'Jane Smith',\n    service: 'Home Visit - Follow-up',\n    amount: 200.00,\n    status: 'paid',\n    date: '2024-01-15T10:30:00.000Z',\n    dueDate: '2024-02-14T23:59:59.000Z'\n  }\n];\n\nexport const mockServices = [\n  {\n    id: '1',\n    name: 'Home Visit - Routine Checkup',\n    description: 'Comprehensive health assessment and routine checkup at patient\\'s home',\n    category: 'Medical Care',\n    price: 150.00,\n    duration: 60,\n    status: 'active',\n    createdAt: '2024-01-15T08:00:00.000Z'\n  },\n  {\n    id: '2',\n    name: 'Medication Administration',\n    description: 'Professional medication administration and monitoring',\n    category: 'Medical Care',\n    price: 75.00,\n    duration: 30,\n    status: 'active',\n    createdAt: '2024-01-15T08:30:00.000Z'\n  },\n  {\n    id: '3',\n    name: 'Wound Care',\n    description: 'Specialized wound cleaning, dressing, and monitoring',\n    category: 'Specialized Care',\n    price: 200.00,\n    duration: 45,\n    status: 'active',\n    createdAt: '2024-01-15T09:00:00.000Z'\n  },\n  {\n    id: '4',\n    name: 'Physical Therapy',\n    description: 'Rehabilitation exercises and mobility assistance',\n    category: 'Therapy',\n    price: 120.00,\n    duration: 45,\n    status: 'active',\n    createdAt: '2024-01-15T09:30:00.000Z'\n  },\n  {\n    id: '5',\n    name: 'Emergency Response',\n    description: '24/7 emergency medical response and assessment',\n    category: 'Emergency',\n    price: 300.00,\n    duration: 90,\n    status: 'active',\n    createdAt: '2024-01-15T10:00:00.000Z'\n  },\n  {\n    id: '6',\n    name: 'Health Education',\n    description: 'Patient and family health education and counseling',\n    category: 'Education',\n    price: 80.00,\n    duration: 30,\n    status: 'active',\n    createdAt: '2024-01-15T10:30:00.000Z'\n  }\n];\n\nexport const mockCertifications = [\n  {\n    id: '1',\n    name: 'Registered Nurse (RN)',\n    issuer: 'Ontario College of Nurses',\n    nurseId: '1',\n    nurseName: 'Sarah Wilson',\n    issueDate: '2022-01-15T00:00:00.000Z',\n    expiryDate: '2025-01-15T00:00:00.000Z',\n    status: 'valid',\n    certificateNumber: 'RN-2022-001',\n    createdAt: '2024-01-15T08:00:00.000Z'\n  },\n  {\n    id: '2',\n    name: 'CPR Certification',\n    issuer: 'Canadian Red Cross',\n    nurseId: '1',\n    nurseName: 'Sarah Wilson',\n    issueDate: '2023-06-01T00:00:00.000Z',\n    expiryDate: '2024-06-01T00:00:00.000Z',\n    status: 'expiring',\n    certificateNumber: 'CPR-2023-001',\n    createdAt: '2024-01-15T08:30:00.000Z'\n  },\n  {\n    id: '3',\n    name: 'Advanced Cardiac Life Support (ACLS)',\n    issuer: 'American Heart Association',\n    nurseId: '2',\n    nurseName: 'Mike Brown',\n    issueDate: '2021-03-10T00:00:00.000Z',\n    expiryDate: '2023-03-10T00:00:00.000Z',\n    status: 'expired',\n    certificateNumber: 'ACLS-2021-001',\n    createdAt: '2024-01-15T09:00:00.000Z'\n  },\n  {\n    id: '4',\n    name: 'Wound Care Specialist',\n    issuer: 'Wound Care Education Institute',\n    nurseId: '2',\n    nurseName: 'Mike Brown',\n    issueDate: '2023-08-20T00:00:00.000Z',\n    expiryDate: '2026-08-20T00:00:00.000Z',\n    status: 'valid',\n    certificateNumber: 'WCS-2023-001',\n    createdAt: '2024-01-15T09:30:00.000Z'\n  },\n  {\n    id: '5',\n    name: 'Pediatric Advanced Life Support (PALS)',\n    issuer: 'American Heart Association',\n    nurseId: '3',\n    nurseName: 'Emily Davis',\n    issueDate: '2022-11-15T00:00:00.000Z',\n    expiryDate: '2024-11-15T00:00:00.000Z',\n    status: 'expiring',\n    certificateNumber: 'PALS-2022-001',\n    createdAt: '2024-01-15T10:00:00.000Z'\n  },\n  {\n    id: '6',\n    name: 'Geriatric Care Specialist',\n    issuer: 'National Association of Geriatric Care',\n    nurseId: '3',\n    nurseName: 'Emily Davis',\n    issueDate: '2023-01-10T00:00:00.000Z',\n    expiryDate: '2026-01-10T00:00:00.000Z',\n    status: 'valid',\n    certificateNumber: 'GCS-2023-001',\n    createdAt: '2024-01-15T10:30:00.000Z'\n  }\n];\n\n// Safe exports with error handling\nexport const getMockPatients = () => safeDataAccess(mockPatients);\nexport const getMockNurses = () => safeDataAccess(mockNurses);\nexport const getMockVisits = () => safeDataAccess(mockVisits);\nexport const getMockIncidents = () => safeDataAccess(mockIncidents);\nexport const getMockBillingItems = () => safeDataAccess(mockBillingItems);\nexport const getMockServices = () => safeDataAccess(mockServices);\nexport const getMockCertifications = () => safeDataAccess(mockCertifications);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1094, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/josue/OneDrive/Desktop/MedAid/app/%28app%29/schedule/page.tsx"],"sourcesContent":["'use client';\n\n// Force rebuild to clear cache\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Modal } from '@/components/ui/modal';\nimport { VisitForm } from '@/components/forms/visit-form';\nimport { mockVisits, mockNurses, mockPatients, mockServices } from '@/lib/mock-data';\nimport { formatDate, formatTime, getInitials } from '@/lib/utils';\nimport {\n  Calendar,\n  Plus,\n  ChevronLeft,\n  ChevronRight,\n  Clock,\n  User,\n  MapPin,\n  Eye,\n  Edit,\n  Trash2\n} from 'lucide-react';\n\nexport default function SchedulePage() {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedVisit, setSelectedVisit] = useState<any>(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  // Use mock data instead of API calls\n  const visits = mockVisits;\n  const nurses = mockNurses;\n  const patients = mockPatients;\n  const visitsLoading = false; // Set to false as we are using mock data\n\n  const getNurseName = (nurseId: string) => {\n    return nurses?.find(n => n.id === nurseId)?.name || 'Unknown Nurse';\n  };\n\n  const getPatientName = (patientId: string) => {\n    return patients?.find(p => p.id === patientId)?.name || 'Unknown Patient';\n  };\n\n  const getStatusText = (status: string) => {\n    const statusConfig = {\n      scheduled: 'Scheduled',\n      completed: 'Completed',\n      cancelled: 'Cancelled',\n      in_progress: 'In Progress'\n    };\n    \n    return statusConfig[status as keyof typeof statusConfig] || status;\n  };\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    setCurrentDate(prev => {\n      const newDate = new Date(prev);\n      if (direction === 'prev') {\n        newDate.setMonth(newDate.getMonth() - 1);\n      } else {\n        newDate.setMonth(newDate.getMonth() + 1);\n      }\n      return newDate;\n    });\n  };\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n    \n    const days = [];\n    \n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      days.push(null);\n    }\n    \n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day));\n    }\n    \n    return days;\n  };\n\n  const getVisitsForDate = (date: Date) => {\n    if (!visits) return [];\n    return visits.filter(visit => {\n      const visitDate = new Date(visit.date);\n      return visitDate.toDateString() === date.toDateString();\n    });\n  };\n\n  const handleAddVisit = () => {\n    setIsAddModalOpen(true);\n  };\n\n  const handleSubmitVisit = (visitData: any) => {\n    console.log('New visit data:', visitData);\n    // TODO: Add API call to create visit\n    setIsAddModalOpen(false);\n    // Show success message or refresh data\n  };\n\n  const days = getDaysInMonth(currentDate);\n  const monthName = currentDate.toLocaleString('default', { month: 'long', year: 'numeric' });\n\n  if (visitsLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Schedule</h1>\n        </div>\n        <div className=\"grid grid-cols-7 gap-4\">\n          {Array.from({ length: 35 }).map((_, i) => (\n            <Card key={i} className=\"h-32\">\n              <CardContent className=\"p-4\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n                  <div className=\"h-8 bg-gray-200 rounded w-3/4\"></div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Schedule</h1>\n        <Button onClick={handleAddVisit} variant=\"primary\" size=\"lg\" className=\"shadow-lg\">\n          <Plus className=\"h-5 w-5 mr-2\" />\n          Add Visit\n        </Button>\n      </div>\n\n      {/* Calendar Navigation */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => navigateMonth('prev')}\n              >\n                <ChevronLeft className=\"h-4 w-4\" />\n              </Button>\n              <h2 className=\"text-xl font-semibold\">{monthName}</h2>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => navigateMonth('next')}\n              >\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n            </div>\n            <Button\n              variant=\"outline\"\n              onClick={() => setCurrentDate(new Date())}\n            >\n              Today\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {/* Calendar Grid */}\n          <div className=\"grid grid-cols-7 gap-1 mb-4\">\n            {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n              <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                {day}\n              </div>\n            ))}\n            {days.map((day, index) => (\n              <div\n                key={index}\n                className={`min-h-[120px] p-2 border border-gray-200 ${\n                  day ? 'bg-white hover:bg-gray-50' : 'bg-gray-50'\n                }`}\n              >\n                {day && (\n                  <>\n                    <div className=\"text-sm font-medium text-gray-900 mb-2\">\n                      {day.getDate()}\n                    </div>\n                    <div className=\"space-y-1\">\n                      {getVisitsForDate(day).slice(0, 3).map(visit => (\n                        <div\n                          key={visit.id}\n                          className=\"text-xs p-1 bg-gray-100 text-gray-800 rounded cursor-pointer hover:bg-gray-200\"\n                          onClick={() => setSelectedVisit(visit)}\n                        >\n                          <div className=\"font-medium\">{visit.time}</div>\n                          <div className=\"truncate\">{getPatientName(visit.patientId)}</div>\n                        </div>\n                      ))}\n                      {getVisitsForDate(day).length > 3 && (\n                        <div className=\"text-xs text-gray-500\">\n                          +{getVisitsForDate(day).length - 3} more\n                        </div>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Today's Visits Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Calendar className=\"h-5 w-5 mr-2\" />\n            Today's Visits ({getVisitsForDate(new Date()).length})\n          </CardTitle>\n          <CardDescription>\n            Visits scheduled for today\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {getVisitsForDate(new Date()).length > 0 ? (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border-collapse\">\n                <thead>\n                  <tr className=\"border-b border-gray-200\">\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Time</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Patient</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Nurse</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Type</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Status</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Address</th>\n                    <th className=\"text-left py-3 px-4 font-semibold text-gray-700\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {getVisitsForDate(new Date()).map((visit) => (\n                    <tr key={visit.id} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center\">\n                          <Clock className=\"h-4 w-4 mr-2 text-gray-500\" />\n                          <span className=\"font-medium text-gray-900\">{visit.time}</span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center\">\n                          <User className=\"h-4 w-4 mr-2 text-gray-500\" />\n                          <span className=\"font-medium text-gray-900\">\n                            {getPatientName(visit.patientId)}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center\">\n                          <User className=\"h-4 w-4 mr-2 text-gray-500\" />\n                          <span className=\"text-gray-700\">\n                            {getNurseName(visit.nurseId)}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-gray-700 capitalize\">{visit.type}</span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-gray-700\">\n                          {getStatusText(visit.status)}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center max-w-xs\">\n                          <MapPin className=\"h-4 w-4 mr-2 text-gray-500 flex-shrink-0\" />\n                          <span className=\"text-gray-700 truncate\">{visit.address}</span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Button variant=\"outline\" size=\"sm\" onClick={() => setSelectedVisit(visit)}>\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"destructive\" size=\"sm\">\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Calendar className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No visits today</h3>\n              <p className=\"text-gray-600\">All caught up! No visits scheduled for today.</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Visit Details Modal */}\n      {selectedVisit && (\n        <Card className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <Card className=\"w-full max-w-2xl mx-4\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle>Visit Details</CardTitle>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setSelectedVisit(null)}\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Patient</p>\n                  <p className=\"text-gray-900\">{getPatientName(selectedVisit.patientId)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Nurse</p>\n                  <p className=\"text-gray-900\">{getNurseName(selectedVisit.nurseId)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Date</p>\n                  <p className=\"text-gray-900\">{formatDate(selectedVisit.date)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Time</p>\n                  <p className=\"text-gray-900\">{selectedVisit.time}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Type</p>\n                  <p className=\"text-gray-900 capitalize\">{selectedVisit.type}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">Status</p>\n                  <Badge variant={selectedVisit.status === 'scheduled' ? 'default' : 'secondary'}>\n                    {selectedVisit.status}\n                  </Badge>\n                </div>\n                <div className=\"col-span-2\">\n                  <p className=\"text-sm font-medium text-gray-600\">Address</p>\n                  <p className=\"text-gray-900\">{selectedVisit.address}</p>\n                </div>\n                <div className=\"col-span-2\">\n                  <p className=\"text-sm font-medium text-gray-600\">Notes</p>\n                  <p className=\"text-gray-900\">{selectedVisit.notes || 'No notes available'}</p>\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-2\">\n                <Button variant=\"outline\" onClick={() => setSelectedVisit(null)}>\n                  Close\n                </Button>\n                <Button variant=\"primary\">\n                  Edit Visit\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </Card>\n      )}\n\n      {/* Add Visit Modal */}\n      {isAddModalOpen && (\n        <Modal\n          isOpen={isAddModalOpen}\n          onClose={() => setIsAddModalOpen(false)}\n          title=\"Add New Visit\"\n        >\n          <VisitForm\n            patients={patients || []}\n            nurses={nurses || []}\n            services={mockServices || []}\n            onSubmit={handleSubmitVisit}\n            onCancel={() => setIsAddModalOpen(false)}\n            isLoading={false}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}